<start of App.tsx>
// App.tsx import React from 'react'; import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'; import Header from './components/Header'; import Hero from './components/Hero'; import Solutions from './components/Solutions'; import Features from './components/Features'; import Demo from './components/Demo'; import Footer from './components/Footer'; // New Section Imports import MarketSection from './components/MarketSection'; import PricingSection from './components/PricingSection'; import TestimonialsSection from './components/TestimonialsSection'; import TeamSection from './components/TeamSection'; import GetEarlyAccessSection from './components/GetEarlyAccessSection'; import BlogPreviewSection from './components/BlogPreviewSection'; // Assuming a simple Contact form section for homepage import ContactSection from './components/ContactSection'; // Create this similar to other sections // Page Imports import AboutPage from './pages/AboutPage'; // Assuming AboutPage is now in a pages directory import ContactFullPage from './pages/ContactFullPage'; // Assuming ContactPage is now in a pages directory import BlogPage from './pages/BlogPage'; import PrivacyPolicyPage from './pages/PrivacyPolicyPage'; import TermsOfServicePage from './pages/TermsOfServicePage'; import './index.css'; // Update existing components to accept an id prop if they don't have a wrapper that can take an id // For example, Hero.tsx might need to be wrapped or modified. // For simplicity, I'll assume section components themselves handle their `id` // And their root element will be <section id="the-id">...</section> // Create placeholder pages if they don't exist // (e.g. AboutPage, ContactFullPage based on original App.tsx structure) // Re-creating AboutPage from original to be in /pages const OriginalAboutPageContent: React.FC = () => ( <main className="max-w-7xl mx-auto py-24 px-4"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-8">About SecureGuard Pro</h1> <div className="prose max-w-none"> <p className="text-lg text-gray-600 mb-6"> SecureGuard Pro is a comprehensive security guard management platform that revolutionizes how security operations are managed across different organizational levels. </p> <h2 className="text-2xl font-bold text-gray-900 mb-4">Our Mission</h2> <p className="text-gray-600 mb-6"> To provide a unified platform that serves National Registry authorities, Security Companies, and Individual Clients with specialized tools tailored to their unique needs. </p> <h2 className="text-2xl font-bold text-gray-900 mb-4">Key Benefits</h2> <ul className="list-disc pl-6 text-gray-600 space-y-2"> <li>Real-time RFID-based guard tracking and monitoring</li> <li>Comprehensive compliance management and regulatory reporting</li> <li>Multi-tenant architecture ensuring data security and privacy</li> <li>Mobile-first design for field operations</li> <li>Advanced analytics and customizable reporting</li> </ul> </div> </main> ); const UpdatedAboutPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <OriginalAboutPageContent /> <Footer /> </div> ); // Re-creating ContactPage from original to be in /pages as ContactFullPage const OriginalContactPageContent: React.FC = () => ( <main className="max-w-7xl mx-auto py-24 px-4"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-8">Contact Us</h1> <div className="grid grid-cols-1 lg:grid-cols-2 gap-12"> <div> <h2 className="text-2xl font-bold text-gray-900 mb-6">Get in Touch</h2> <div className="space-y-4"> <div> <h3 className="font-semibold text-gray-900">Sales Inquiries</h3> <p className="text-gray-600">Email: sales@yourdomain.com</p> <p className="text-gray-600">Phone: +1 (555) 123-4567</p> </div> <div> <h3 className="font-semibold text-gray-900">Technical Support</h3> <p className="text-gray-600">Email: support@yourdomain.com</p> <p className="text-gray-600">Phone: +1 (555) 123-4568</p> </div> <div> <h3 className="font-semibold text-gray-900">General Information</h3> <p className="text-gray-600">Email: info@yourdomain.com</p> </div> </div> </div> <div className="bg-white p-8 rounded-lg shadow-md"> <h3 className="text-xl font-bold text-gray-900 mb-4">Send us a message</h3> <form className="space-y-4"> <div> <label className="block text-sm font-medium text-gray-700">Name</label> <input type="text" className="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" /> </div> <div> <label className="block text-sm font-medium text-gray-700">Email</label> <input type="email" className="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" /> </div> <div> <label className="block text-sm font-medium text-gray-700">Message</label> <textarea rows={4} className="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea> </div> <button type="submit" className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors"> Send Message </button> </form> </div> </div> </main> ); const UpdatedContactFullPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <OriginalContactPageContent /> <Footer /> </div> ); // Simple on-page contact section component // components/ContactSection.tsx const ContactSection: React.FC = () => ( <section id="contact" className="section-container bg-gray-100"> <div className="max-w-3xl mx-auto"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Contact Us</h2> <p className="text-xl text-gray-700 mb-8">Have questions? We'd love to hear from you.</p> <form className="bg-white p-8 rounded-lg shadow-xl space-y-6 w-full"> <div> <label htmlFor="name" className="block text-sm font-medium text-gray-700 text-left">Name</label> <input type="text" name="name" id="name" className="mt-1 w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" /> </div> <div> <label htmlFor="email" className="block text-sm font-medium text-gray-700 text-left">Email</label> <input type="email" name="email" id="email" className="mt-1 w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" /> </div> <div> <label htmlFor="message" className="block text-sm font-medium text-gray-700 text-left">Message</label> <textarea name="message" id="message" rows={4} className="mt-1 w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea> </div> <button type="submit" className="w-full bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 transition-colors text-lg"> Send Message </button> </form> <p className="mt-6 text-gray-600"> For more detailed inquiries, visit our full <Link to="/contact-full" className="text-blue-600 hover:underline">Contact Page</Link>. </p> </div> </section> ); // Ensure Hero, Solutions, Features, Demo components have their root element as <section id="their-id">...</section> // or are wrapped appropriately. // E.g., in Hero.tsx: change root to <section id="hero" className="..."> const HomePage: React.FC = () => ( <div> {/* No min-h-screen here, sections control their height */} <Header /> {/* Ensure Hero.tsx root element is `<section id="hero" ...>` and uses `min-h-screen` etc. */} <Hero /> {/* Assign id internally or wrap: <div id="hero"><Hero /></div> */} <Solutions /> {/* id="solutions" is internal */} <Features /> {/* id="features" is internal */} <MarketSection /> <PricingSection /> <TestimonialsSection /> <TeamSection /> <Demo /> {/* id="demo" needs to be ensured or added */} <GetEarlyAccessSection /> <BlogPreviewSection /> <ContactSection /> {/* On-page contact form section */} <Footer /> </div> ); function App() { return ( <Router> <Routes> <Route path="/" element={<HomePage />} /> <Route path="/about" element={<UpdatedAboutPage />} /> <Route path="/contact-full" element={<UpdatedContactFullPage />} /> {/* Renamed to avoid conflict if /contact is used for section */} <Route path="/blog" element={<BlogPage />} /> {/* Add routes for individual blog posts if needed, e.g., /blog/:postId */} <Route path="/privacy-policy" element={<PrivacyPolicyPage />} /> <Route path="/terms-of-service" element={<TermsOfServicePage />} /> </Routes> </Router> ); } export default App;
<end of App.tsx>

<start of components/BlogPreviewSection.tsx>
// components/BlogPreviewSection.tsx import React from 'react'; import { Link } from 'react-router-dom'; const BlogPreviewSection: React.FC = () => ( <section id="blog" className="section-container bg-gray-50"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Latest News & Insights</h2> <p className="text-xl text-gray-700 mb-8">Stay updated with our blog.</p> {/* Placeholder for blog post previews */} <div className="max-w-4xl mx-auto grid md:grid-cols-3 gap-6"> {[1,2,3].map(i => ( <div key={i} className="bg-white p-6 rounded-lg shadow-md"> <h3 className="text-xl font-semibold mb-2">Blog Post Title {i}</h3> <p className="text-gray-600 text-sm mb-4">A short excerpt of the blog post goes here...</p> <Link to={`/blog/post-${i}`} className="text-blue-600 hover:underline">Read More</Link> </div> ))} </div> <Link to="/blog" className="mt-12 inline-block bg-blue-600 text-white py-3 px-8 rounded-md hover:bg-blue-700 transition-colors text-lg"> Visit Our Blog </Link> </section> ); export default BlogPreviewSection;
<end of components/BlogPreviewSection.tsx>

<start of components/Demo.tsx>
import React from 'react'; const Demo: React.FC = () => { return ( <section className="py-20 bg-blue-600"> <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center"> <h3 className="text-3xl md:text-4xl font-bold text-white mb-4"> See It In Action </h3> <p className="text-xl text-blue-100 mb-8 max-w-3xl mx-auto"> Experience our platform with interactive demonstrations of all three portals </p> <a href="https://demo.yourdomain.com" className="btn-portal btn-portal-orange" target="_blank" rel="noopener noreferrer" > Launch Interactive Demo </a> <p className="text-blue-100 mt-4 text-sm"> No registration required • Full feature preview • Sample data included </p> </div> </section> ); }; export default Demo;
<end of components/Demo.tsx>

<start of components/Features.tsx>
import React from 'react'; const Features: React.FC = () => { const features = [ { title: 'RFID Tracking', description: 'Real-time guard location tracking with RFID checkpoints', icon: '📡' }, { title: 'Live Monitoring', description: 'Real-time dashboards and live guard status updates', icon: '📊' }, { title: 'Compliance Management', description: 'Automated compliance tracking and regulatory reporting', icon: '📋' }, { title: 'Multi-Tenant Security', description: 'Secure data isolation for different organizations', icon: '🔒' }, { title: 'Mobile Apps', description: 'Native mobile apps for guards and field operations', icon: '📱' }, { title: 'Analytics & Reports', description: 'Comprehensive analytics and customizable reporting', icon: '📈' } ]; return ( <section id="features" className="py-20 bg-gray-50"> <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> <div className="text-center mb-16"> <h3 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4"> Powerful Features </h3> <p className="text-xl text-gray-600 max-w-3xl mx-auto"> Advanced technology stack designed for security guard management </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {features.map((feature, index) => ( <div key={index} className="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow"> <div className="text-4xl mb-4">{feature.icon}</div> <h4 className="text-xl font-bold text-gray-900 mb-2">{feature.title}</h4> <p className="text-gray-600">{feature.description}</p> </div> ))} </div> </div> </section> ); }; export default Features;
<end of components/Features.tsx>

<start of components/Footer.tsx>
// components/Footer.tsx import React from 'react'; import { Link } from 'react-router-dom'; // Placeholder Social Icons (replace with actual SVGs or a library like react-icons) const TwitterIcon = () => <span>TW</span>; const LinkedInIcon = () => <span>LI</span>; const FacebookIcon = () => <span>FB</span>; const InstagramIcon = () => <span>IG</span>; const Footer: React.FC = () => { return ( <footer className="bg-gray-900 text-gray-300 pt-16 pb-8"> <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> {/* Newsletter Section */} <div className="mb-12 p-8 bg-gray-800 rounded-lg text-center"> <h3 className="text-3xl font-bold text-white mb-4">Stay Updated</h3> <p className="text-gray-400 mb-6 max-w-xl mx-auto"> Get the latest updates on SecureGuard Pro features, industry insights, and security news. </p> <form className="flex flex-col sm:flex-row max-w-md mx-auto gap-3"> <input type="email" placeholder="Enter your email" className="flex-grow px-4 py-3 rounded-md text-gray-900 focus:ring-blue-500 focus:border-blue-500 border-gray-300" required /> <button type="submit" className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-3 rounded-md transition-colors" > Subscribe </button> </form> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12"> {/* Column 1: Brand and Info */} <div> <div className="flex items-center mb-4"> <div className="h-10 w-10 bg-blue-600 rounded-lg flex items-center justify-center"> <span className="text-white font-bold text-xl">🛡️</span> </div> <span className="ml-3 text-2xl font-bold text-white">SecureGuard Pro</span> </div> <p className="text-gray-400 mb-4 text-sm"> Revolutionizing security management with intelligent RFID monitoring and real-time guard tracking. </p> <div className="flex space-x-4"> <a href="https://twitter.com" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-white"><TwitterIcon /></a> <a href="https://linkedin.com" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-white"><LinkedInIcon /></a> <a href="https://facebook.com" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-white"><FacebookIcon /></a> <a href="https://instagram.com" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-white"><InstagramIcon /></a> </div> </div> {/* Column 2: Quick Links */} <div> <h4 className="text-lg font-semibold text-white mb-4">Quick Links</h4> <ul className="space-y-2 text-sm"> <li><a href="/#hero" className="hover:text-white transition-colors">Home</a></li> <li><a href="/#solutions" className="hover:text-white transition-colors">Solutions</a></li> <li><a href="/#features" className="hover:text-white transition-colors">Features</a></li> <li><a href="/#pricing" className="hover:text-white transition-colors">Pricing</a></li> <li><a href="/#testimonials" className="hover:text-white transition-colors">Testimonials</a></li> <li><a href="/#team" className="hover:text-white transition-colors">Our Team</a></li> </ul> </div> {/* Column 3: Resources */} <div> <h4 className="text-lg font-semibold text-white mb-4">Resources</h4> <ul className="space-y-2 text-sm"> <li><Link to="/about" className="hover:text-white transition-colors">About Us</Link></li> <li><Link to="/blog" className="hover:text-white transition-colors">Blog</Link></li> <li><a href="/#contact" className="hover:text-white transition-colors">Contact Us</a></li> <li><a href="#" className="hover:text-white transition-colors">Help Center</a></li> {/* Placeholder */} <li><a href="#" className="hover:text-white transition-colors">API Documentation</a></li> {/* Placeholder */} </ul> </div> {/* Column 4: Legal & Contact */} <div> <h4 className="text-lg font-semibold text-white mb-4">Legal & Contact</h4> <ul className="space-y-2 text-sm"> <li><Link to="/privacy-policy" className="hover:text-white transition-colors">Privacy Policy</Link></li> <li><Link to="/terms-of-service" className="hover:text-white transition-colors">Terms of Service</Link></li> <li><a href="#" className="hover:text-white transition-colors">Cookie Policy</a></li> {/* Placeholder, create page if needed */} </ul> <div className="mt-4 text-sm"> <p>Email: <a href="mailto:info@yourdomain.com" className="hover:text-white">info@yourdomain.com</a></p> <p>Phone: <a href="tel:+15551234567" className="hover:text-white">+1 (555) 123-4567</a></p> </div> </div> </div> <div className="border-t border-gray-800 pt-8 flex flex-col md:flex-row justify-between items-center text-sm"> <p className="text-gray-400"> © {new Date().getFullYear()} SecureGuard Pro. All rights reserved. </p> <p className="text-gray-400 mt-4 md:mt-0"> Proudly built for a safer tomorrow. </p> </div> </div> </footer> ); }; export default Footer;
<end of components/Footer.tsx>

<start of components/GetEarlyAccessSection.tsx>
// components/GetEarlyAccessSection.tsx import React from 'react'; const GetEarlyAccessSection: React.FC = () => ( <section id="early-access" className="section-container bg-blue-600 text-white"> <h2 className="text-4xl md:text-5xl font-bold mb-6">Get Early Access</h2> <p className="text-xl mb-8">Be among the first to experience the future of security management.</p> <button className="bg-white text-blue-600 font-semibold py-3 px-8 rounded-lg shadow-md hover:bg-gray-100 transition-colors text-lg"> Sign Up Now </button> </section> ); export default GetEarlyAccessSection;
<end of components/GetEarlyAccessSection.tsx>

<start of components/Header.tsx>
// components/Header.tsx import React, { useState, useEffect } from 'react'; import { Link as RouterLink, useLocation } from 'react-router-dom'; // Assuming Button component is from a shared library and works as expected. // If not, you'd need to define or import a Button component. // For this example, let's mock a simple Button if @security-guard/shared is not available. // const Button = ({ children, variant, ...props }) => <button className={`px-4 py-2 rounded ${variant === 'primary' ? 'bg-blue-600 text-white' : 'border border-blue-600 text-blue-600'}`} {...props}>{children}</button>; import { Button } from '@security-guard/shared'; // Assuming this exists // Icons for mobile menu const MenuIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => ( <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" {...props}> <path strokeLinecap="round" strokeLinejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" /> </svg> ); const XIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => ( <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" {...props}> <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" /> </svg> ); const Header: React.FC = () => { const [isScrolled, setIsScrolled] = useState(false); const [mobileMenuOpen, setMobileMenuOpen] = useState(false); const location = useLocation(); useEffect(() => { const handleScroll = () => { setIsScrolled(window.scrollY > 50); }; window.addEventListener('scroll', handleScroll); return () => window.removeEventListener('scroll', handleScroll); }, []); const isHomePage = location.pathname === '/'; const navLinks: { label: string; href: string; type: 'anchor' | 'page' }[] = [ { label: 'Solutions', href: '/#solutions', type: 'anchor' }, { label: 'Features', href: '/#features', type: 'anchor' }, { label: 'Market', href: '/#market', type: 'anchor' }, { label: 'Pricing', href: '/#pricing', type: 'anchor' }, { label: 'Testimonials', href: '/#testimonials', type: 'anchor' }, { label: 'Our Team', href: '/#team', type: 'anchor' }, { label: 'Contact', href: '/#contact', type: 'anchor' }, { label: 'Blog', href: '/blog', type: 'page' }, { label: 'About Us', href: '/about', type: 'page' }, ]; const NavLinkItem: React.FC<{label: string, href: string, type: 'anchor' | 'page', onClick?: () => void}> = ({ label, href, type, onClick }) => { if (type === 'anchor' && isHomePage) { return <a href={href} onClick={onClick} className="text-gray-700 hover:text-blue-600 transition-colors px-3 py-2 rounded-md text-sm font-medium">{label}</a>; } return <RouterLink to={href} onClick={onClick} className="text-gray-700 hover:text-blue-600 transition-colors px-3 py-2 rounded-md text-sm font-medium">{label}</RouterLink>; }; return ( <header className={`fixed top-0 left-0 w-full z-50 transition-all duration-300 ${isScrolled || !isHomePage ? 'bg-white shadow-md' : 'bg-transparent'}`} > <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> <div className="flex justify-between items-center h-20"> {/* Increased height for better spacing */} <RouterLink to="/" className="flex items-center"> <div className={`h-10 w-10 ${isScrolled || !isHomePage ? 'bg-blue-600' : 'bg-white'} rounded-lg flex items-center justify-center transition-colors duration-300`}> <span className={`font-bold text-xl ${isScrolled || !isHomePage ? 'text-white' : 'text-blue-600'} transition-colors duration-300`}>🛡️</span> </div> <h1 className={`ml-3 text-2xl font-bold ${isScrolled || !isHomePage ? 'text-gray-900' : 'text-white'} transition-colors duration-300`}> SecureGuard Pro </h1> </RouterLink> {/* Desktop Navigation */} <nav className="hidden md:flex items-center space-x-1"> {navLinks.map(link => ( <NavLinkItem key={link.label} {...link} /> ))} </nav> {/* Desktop Buttons */} <div className="hidden md:flex items-center space-x-2"> <RouterLink to="/#demo"> <Button variant="outline" size="sm">Request Demo</Button> </RouterLink> <Button variant="outline" size="sm" onClick={() => console.log('Login clicked')}>Login</Button> <RouterLink to="/#early-access"> <Button variant="primary" size="sm">Get Started</Button> </RouterLink> </div> {/* Mobile Menu Button */} <div className="md:hidden flex items-center"> <button onClick={() => setMobileMenuOpen(!mobileMenuOpen)} className={`p-2 rounded-md ${isScrolled || !isHomePage ? 'text-gray-700' : 'text-white'} hover:text-blue-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500 transition-colors duration-300`} > {mobileMenuOpen ? <XIcon className="h-6 w-6" /> : <MenuIcon className="h-6 w-6" />} </button> </div> </div> </div> {/* Mobile Menu */} {mobileMenuOpen && ( <div className={`md:hidden absolute top-20 left-0 w-full ${isScrolled || !isHomePage ? 'bg-white' : 'bg-gray-800 bg-opacity-95'} shadow-lg pb-4`}> <nav className="flex flex-col space-y-2 px-4 pt-2"> {navLinks.map(link => ( <NavLinkItem key={link.label} {...link} onClick={() => setMobileMenuOpen(false)} /> ))} <div className="pt-4 border-t border-gray-700"> <RouterLink to="/#demo" className="block w-full mb-2"> <Button variant="outline" className="w-full">Request Demo</Button> </RouterLink> <Button variant="outline" className="w-full mb-2" onClick={() => { console.log('Login clicked'); setMobileMenuOpen(false); }}>Login</Button> <RouterLink to="/#early-access" className="block w-full"> <Button variant="primary" className="w-full">Get Started</Button> </RouterLink> </div> <RouterLink to="/privacy-policy" onClick={() => setMobileMenuOpen(false)} className="text-sm text-gray-400 hover:text-white py-2">Privacy Policy</RouterLink> <RouterLink to="/terms-of-service" onClick={() => setMobileMenuOpen(false)} className="text-sm text-gray-400 hover:text-white py-2">Terms of Service</RouterLink> </nav> </div> )} </header> ); }; export default Header;
<end of components/Header.tsx>

<start of components/Hero.tsx>
import React from 'react'; import { Button } from '@security-guard/shared'; const Hero: React.FC = () => { return ( <section className="bg-gradient-to-br from-blue-50 to-indigo-100 py-20"> <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> <div className="text-center"> <h2 className="text-4xl md:text-6xl font-extrabold text-gray-900 mb-6"> Complete Security Guard <span className="text-blue-600"> Management System</span> </h2> <p className="text-xl md:text-2xl text-gray-600 mb-8 max-w-4xl mx-auto"> Advanced RFID-based security guard management platform serving <span className="font-semibold"> National Registry</span>, <span className="font-semibold"> Security Companies</span>, and <span className="font-semibold"> Individual Clients</span> </p> <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12"> <Button size="lg" variant="primary"> Start Free Trial </Button> <Button size="lg" variant="outline"> Watch Demo </Button> </div> <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto"> <div className="text-center"> <div className="text-4xl font-bold text-blue-600">12,500+</div> <div className="text-gray-600">Registered Guards</div> </div> <div className="text-center"> <div className="text-4xl font-bold text-green-600">156</div> <div className="text-gray-600">Security Companies</div> </div> <div className="text-center"> <div className="text-4xl font-bold text-purple-600">2,400+</div> <div className="text-gray-600">Protected Properties</div> </div> </div> </div> </div> </section> ); }; export default Hero;
<end of components/Hero.tsx>

<start of components/MarketSection.tsx>
// components/MarketSection.tsx import React from 'react'; const MarketSection: React.FC = () => ( <section id="market" className="section-container bg-white"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Serving Diverse Markets</h2> <p className="text-xl text-gray-700">Tailored solutions for various industry sectors.</p> {/* Add market-specific content here */} </section> ); export default MarketSection;
<end of components/MarketSection.tsx>

<start of components/PricingSection.tsx>
// components/PricingSection.tsx import React from 'react'; const PricingSection: React.FC = () => { return ( <section id="pricing" className="section-container bg-gray-100"> <div className="max-w-4xl mx-auto"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Flexible Pricing Plans</h2> <p className="text-xl text-gray-700 mb-12"> Choose the plan that fits your security needs. Transparent pricing, no hidden fees. </p> {/* Placeholder for pricing cards */} <div className="grid md:grid-cols-3 gap-8"> {[1, 2, 3].map(i => ( <div key={i} className="bg-white p-8 rounded-lg shadow-xl"> <h3 className="text-2xl font-semibold text-gray-900 mb-4">Plan {i}</h3> <p className="text-4xl font-bold text-blue-600 mb-4">${i * 100}/mo</p> <ul className="space-y-2 text-gray-600 mb-6"> <li>Feature A</li> <li>Feature B</li> <li>Feature C</li> </ul> <button className="w-full bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 transition-colors"> Choose Plan </button> </div> ))} </div> </div> </section> ); }; export default PricingSection;
<end of components/PricingSection.tsx>

<start of components/Solutions.tsx>
import React from 'react'; const Solutions: React.FC = () => { const solutions = [ { title: 'National Registry Portal', description: 'Centralized guard registration and compliance monitoring for government agencies', features: ['Guard verification & approval', 'Company compliance tracking', 'National audit logs', 'Regulatory reporting'], icon: '🏛️', color: 'blue', url: 'https://registry.yourdomain.com' }, { title: 'Security Company Portal', description: 'Complete guard management, scheduling, and client service platform', features: ['Guard scheduling & assignments', 'Client management', 'Real-time operations', 'Performance analytics'], icon: '🏢', color: 'green', url: 'https://companies.yourdomain.com' }, { title: 'Individual Client App', description: 'Easy guard booking, real-time monitoring, and property security management', features: ['Guard booking & requests', 'Live property monitoring', 'Incident reporting', 'Service feedback'], icon: '🏠', color: 'purple', url: 'https://app.yourdomain.com' } ]; const getColorClasses = (color: string) => { switch (color) { case 'blue': return 'bg-blue-50 border-blue-200 text-blue-800'; case 'green': return 'bg-green-50 border-green-200 text-green-800'; case 'purple': return 'bg-purple-50 border-purple-200 text-purple-800'; default: return 'bg-gray-50 border-gray-200 text-gray-800'; } }; const getButtonClasses = (color: string) => { switch (color) { case 'blue': return 'btn-portal btn-portal-blue'; case 'green': return 'btn-portal btn-portal-green'; case 'purple': return 'btn-portal btn-portal-purple'; default: return 'btn-portal btn-portal-blue'; } }; return ( <section id="solutions" className="py-20 bg-white"> <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> <div className="text-center mb-16"> <h3 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4"> Three Specialized Solutions </h3> <p className="text-xl text-gray-600 max-w-3xl mx-auto"> Our platform serves different user types with tailored interfaces and features </p> </div> <div className="grid grid-cols-1 lg:grid-cols-3 gap-8"> {solutions.map((solution, index) => ( <div key={index} className="bg-white rounded-lg shadow-lg border border-gray-200 p-8 hover:shadow-xl transition-shadow"> <div className={`w-16 h-16 rounded-lg ${getColorClasses(solution.color)} flex items-center justify-center text-2xl mb-6`}> {solution.icon} </div> <h4 className="text-2xl font-bold text-gray-900 mb-4">{solution.title}</h4> <p className="text-gray-600 mb-6">{solution.description}</p> <ul className="space-y-2 mb-8"> {solution.features.map((feature, featureIndex) => ( <li key={featureIndex} className="flex items-center text-gray-700"> <span className="text-green-500 mr-2">✓</span> {feature} </li> ))} </ul> <a href={solution.url} className={getButtonClasses(solution.color)} target="_blank" rel="noopener noreferrer" > Access Portal </a> </div> ))} </div> </div> </section> ); }; export default Solutions;
<end of components/Solutions.tsx>

<start of components/TeamSection.tsx>
// components/TeamSection.tsx import React from 'react'; const TeamSection: React.FC = () => ( <section id="team" className="section-container bg-blue-50"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Meet Our Team</h2> <p className="text-xl text-gray-700">The passionate individuals behind SecureGuard Pro.</p> {/* Add team member profiles here */} </section> ); export default TeamSection;
<end of components/TeamSection.tsx>

<start of components/TestimonialsSection.tsx>
// components/TestimonialsSection.tsx import React from 'react'; const TestimonialsSection: React.FC = () => ( <section id="testimonials" className="section-container bg-white"> <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">What Our Clients Say</h2> <p className="text-xl text-gray-700">Real stories from satisfied SecureGuard Pro users.</p> {/* Add testimonial cards here */} </section> ); export default TestimonialsSection;
<end of components/TestimonialsSection.tsx>

<start of index.css>
/* index.css */ @tailwind base; @tailwind components; @tailwind utilities; html { scroll-behavior: smooth; /* Adjust this value based on your fixed header's height */ /* This helps prevent content from being hidden behind a fixed header during anchor link navigation */ scroll-padding-top: 80px; /* Example: if header is 80px tall */ } body { margin: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; background-color: #f8fafc; /* A light base background */ } @layer components { .btn-portal { @apply inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white transition-colors duration-200; } .btn-portal-blue { @apply bg-blue-600 hover:bg-blue-700; } .btn-portal-green { @apply bg-green-600 hover:bg-green-700; } .btn-portal-purple { @apply bg-purple-600 hover:bg-purple-700; } .btn-portal-orange { @apply bg-orange-600 hover:bg-orange-700; } /* Added for new sections */ .section-container { @apply min-h-screen flex flex-col items-center justify-center py-16 px-4 sm:px-6 lg:px-8 text-center; } } /* Basic animation for elements appearing on scroll (can be enhanced with JS) */ .fade-in-up { opacity: 0; transform: translateY(20px); transition: opacity 0.5s ease-out, transform 0.5s ease-out; } .fade-in-up.is-visible { opacity: 1; transform: translateY(0); }
<end of index.css>

<start of main.tsx>
import React from 'react' import ReactDOM from 'react-dom/client' import App from './App' ReactDOM.createRoot(document.getElementById('root')!).render( <React.StrictMode> <App /> </React.StrictMode>, )
<end of main.tsx>

<start of pages/AboutPage.tsx>
// pages//AboutPage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const AboutPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-7xl mx-auto py-24 px-4 sm:px-6 lg:px-8"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-12 text-center">Our Blog</h1> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {/* Placeholder for blog posts */} {[1, 2, 3, 4, 5, 6].map(i => ( <div key={i} className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow"> <h2 className="text-2xl font-semibold text-gray-900 mb-3">Blog Post Title {i}</h2> <p className="text-gray-600 mb-4"> This is a summary of the blog post. Click read more to see the full content. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <a href="#" className="text-blue-600 hover:text-blue-800 font-medium">Read more →</a> </div> ))} </div> </main> <Footer /> </div> ); export default AboutPage;
<end of pages/AboutPage.tsx>

<start of pages/BlogPage.tsx>
// pages/BlogPage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const BlogPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-7xl mx-auto py-24 px-4 sm:px-6 lg:px-8"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-12 text-center">Our Blog</h1> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {/* Placeholder for blog posts */} {[1, 2, 3, 4, 5, 6].map(i => ( <div key={i} className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow"> <h2 className="text-2xl font-semibold text-gray-900 mb-3">Blog Post Title {i}</h2> <p className="text-gray-600 mb-4"> This is a summary of the blog post. Click read more to see the full content. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <a href="#" className="text-blue-600 hover:text-blue-800 font-medium">Read more →</a> </div> ))} </div> </main> <Footer /> </div> ); export default BlogPage;
<end of pages/BlogPage.tsx>

<start of pages/ContactFullPage.tsx>
// pages//ContactFullPage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const ContactFullPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-7xl mx-auto py-24 px-4 sm:px-6 lg:px-8"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-12 text-center">Our Blog</h1> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {/* Placeholder for blog posts */} {[1, 2, 3, 4, 5, 6].map(i => ( <div key={i} className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow"> <h2 className="text-2xl font-semibold text-gray-900 mb-3">Blog Post Title {i}</h2> <p className="text-gray-600 mb-4"> This is a summary of the blog post. Click read more to see the full content. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <a href="#" className="text-blue-600 hover:text-blue-800 font-medium">Read more →</a> </div> ))} </div> </main> <Footer /> </div> ); export default ContactFullPage;
<end of pages/ContactFullPage.tsx>

<start of pages/ContactSection.tsx>
// pages//ContactSection.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const ContactSection: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-7xl mx-auto py-24 px-4 sm:px-6 lg:px-8"> {/* Added py-24 for header offset */} <h1 className="text-4xl font-bold text-gray-900 mb-12 text-center">Our Blog</h1> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {/* Placeholder for blog posts */} {[1, 2, 3, 4, 5, 6].map(i => ( <div key={i} className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow"> <h2 className="text-2xl font-semibold text-gray-900 mb-3">Blog Post Title {i}</h2> <p className="text-gray-600 mb-4"> This is a summary of the blog post. Click read more to see the full content. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <a href="#" className="text-blue-600 hover:text-blue-800 font-medium">Read more →</a> </div> ))} </div> </main> <Footer /> </div> ); export default ContactSection;
<end of pages/ContactSection.tsx>

<start of pages/CookiePolicyPage.tsx>
// pages/CookiePolicyPage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const CookiePolicyPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-4xl mx-auto py-24 px-4 prose lg:prose-xl"> {/* Added py-24 for header offset */} <h1>Terms of Service</h1> <p>Last updated: {new Date().toLocaleDateString()}</p> <p>Please read these Terms of Service ("Terms", "Terms of Service") carefully before using the SecureGuard Pro website (the "Service") operated by SecureGuard Pro ("us", "we", or "our").</p> <p>Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.</p> {/* ... More terms of service content ... */} <h2>Contact Us</h2> <p>If you have any questions about these Terms, please contact us:</p> <ul> <li>By email: legal@yourdomain.com</li> </ul> </main> <Footer /> </div> ); export default CookiePolicyPage;
<end of pages/CookiePolicyPage.tsx>

<start of pages/PrivacyPolicyPage.tsx>
// pages/PrivacyPolicyPage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const PrivacyPolicyPage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-4xl mx-auto py-24 px-4 prose lg:prose-xl"> {/* Added py-24 for header offset */} <h1>Privacy Policy</h1> <p>Last updated: {new Date().toLocaleDateString()}</p> <p>SecureGuard Pro ("us", "we", or "our") operates the SecureGuard Pro website (the "Service").</p> <p>This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data.</p> <h2>Information Collection and Use</h2> <p>We collect several different types of information for various purposes to provide and improve our Service to you.</p> {/* ... More privacy policy content ... */} <h2>Contact Us</h2> <p>If you have any questions about this Privacy Policy, please contact us:</p> <ul> <li>By email: privacy@yourdomain.com</li> </ul> </main> <Footer /> </div> ); export default PrivacyPolicyPage;
<end of pages/PrivacyPolicyPage.tsx>

<start of pages/TermsOfServicePage.tsx>
// pages/TermsOfServicePage.tsx import React from 'react'; import Header from '../components/Header'; import Footer from '../components/Footer'; const TermsOfServicePage: React.FC = () => ( <div className="min-h-screen bg-gray-50"> <Header /> <main className="max-w-4xl mx-auto py-24 px-4 prose lg:prose-xl"> {/* Added py-24 for header offset */} <h1>Terms of Service</h1> <p>Last updated: {new Date().toLocaleDateString()}</p> <p>Please read these Terms of Service ("Terms", "Terms of Service") carefully before using the SecureGuard Pro website (the "Service") operated by SecureGuard Pro ("us", "we", or "our").</p> <p>Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.</p> {/* ... More terms of service content ... */} <h2>Contact Us</h2> <p>If you have any questions about these Terms, please contact us:</p> <ul> <li>By email: legal@yourdomain.com</li> </ul> </main> <Footer /> </div> ); export default TermsOfServicePage;
<end of pages/TermsOfServicePage.tsx>